<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zkh.cloud.dao.OrderLockMapper" >
  <resultMap id="BaseResultMap" type="com.zkh.cloud.bean.OrderLock" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="goods" property="goods" jdbcType="VARCHAR" />
    <result column="optimistic_lock" property="optimisticLock" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, number, goods, optimistic_lock, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zkh.cloud.bean.OrderLockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ao_order_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ao_order_lock
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ao_order_lock
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zkh.cloud.bean.OrderLockExample" >
    delete from ao_order_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zkh.cloud.bean.OrderLock" >
    insert into ao_order_lock (id, user_id, number, 
      goods, optimistic_lock, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{goods,jdbcType=VARCHAR}, #{optimisticLock,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zkh.cloud.bean.OrderLock" >
    insert into ao_order_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="goods != null" >
        goods,
      </if>
      <if test="optimisticLock != null" >
        optimistic_lock,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="goods != null" >
        #{goods,jdbcType=VARCHAR},
      </if>
      <if test="optimisticLock != null" >
        #{optimisticLock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zkh.cloud.bean.OrderLockExample" resultType="java.lang.Integer" >
    select count(*) from ao_order_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ao_order_lock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.goods != null" >
        goods = #{record.goods,jdbcType=VARCHAR},
      </if>
      <if test="record.optimisticLock != null" >
        optimistic_lock = #{record.optimisticLock,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ao_order_lock
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      goods = #{record.goods,jdbcType=VARCHAR},
      optimistic_lock = #{record.optimisticLock,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zkh.cloud.bean.OrderLock" >
    update ao_order_lock
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="goods != null" >
        goods = #{goods,jdbcType=VARCHAR},
      </if>
      <if test="optimisticLock != null" >
        optimistic_lock = #{optimisticLock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zkh.cloud.bean.OrderLock" >
    update ao_order_lock
    set user_id = #{userId,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      goods = #{goods,jdbcType=VARCHAR},
      optimistic_lock = #{optimisticLock,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="update" parameterType="com.zkh.cloud.bean.OrderLock" >
    update ao_order_lock
    set 
      user_id = #{userId},
      number = #{number}-1,
      optimistic_lock = #{optimisticLock}+1,
      create_time = #{createTime}
    where id = #{id} and optimistic_lock = #{optimisticLock}
  </update>
  
  
    <!-- 分页查询 add by  wangxueqiang  start -->
  <select id="queryList" resultMap="BaseResultMap" parameterType="java.util.Map" >
		select
		<include refid="Base_Column_List" />
		from ao_order_lock
		<where>
			<if test="equipName != null and equipName.trim() != ''">
				and equip_name like concat('%',#{equipName},'%')
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
 	<select id="queryTotal" resultType="int">
		select count(*) from ao_order_lock 
		<where>
			<if test="equipName != null and equipName.trim() != ''">
				and equip_name like concat('%',#{equipName},'%')
			</if>
		</where>
	</select>
    <!-- 分页查询 add by  wangxueqiang  start -->   
    
    <!-- 批量删除 add by  wangxueqiang  start -->
    <delete id="deleteBatch">
		delete from ao_order_lock where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
    <!-- 批量删除add by  wangxueqiang  end -->
  
   <!-- 查询最新一条记录 add by  wangxueqiang  start -->
   <select id="selectOne" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ao_order_lock
    order by create_time desc 
    limit 1
   </select>
   <!-- 查询最新一条记录 add by  wangxueqiang  start -->
</mapper>